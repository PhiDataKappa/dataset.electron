{"version":3,"sources":["../app/main.js"],"names":["isDevelopment","process","env","NODE_ENV","mainWindow","forceQuit","installExtensions","installer","require","extensions","forceDownload","UPGRADE_EXTENSIONS","name","default","console","log","message","start","productName","companyName","submitURL","uploadToServer","on","platform","quit","width","height","minWidth","minHeight","show","loadURL","format","pathname","join","__dirname","protocol","slashes","webContents","once","e","preventDefault","hide","openDevTools","props","buildFromTemplate","label","click","inspectElement","x","y","popup"],"mappings":"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","file":"main.js","sourcesContent":["import path from 'path';\nimport url from 'url';\nimport {app, crashReporter, BrowserWindow, Menu} from 'electron';\n\nconst isDevelopment = (process.env.NODE_ENV === 'development');\n\nlet mainWindow = null;\nlet forceQuit = false;\n\nconst installExtensions = async () => {\n  const installer = require('electron-devtools-installer');\n  const extensions = [\n    'REACT_DEVELOPER_TOOLS',\n    'REDUX_DEVTOOLS'\n  ];\n  const forceDownload = !!process.env.UPGRADE_EXTENSIONS;\n  for (const name of extensions) {\n    try {\n      await installer.default(installer[name], forceDownload);\n    } catch (e) {\n      console.log(`Error installing ${name} extension: ${e.message}`);\n    }\n  }\n};\n\ncrashReporter.start({\n  productName: 'YourName',\n  companyName: 'YourCompany',\n  submitURL: 'https://your-domain.com/url-to-submit',\n  uploadToServer: false\n});\n\napp.on('window-all-closed', () => {\n  // On OS X it is common for applications and their menu bar\n  // to stay active until the user quits explicitly with Cmd + Q\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\n\napp.on('ready', async () => {\n  if (isDevelopment) {\n    await installExtensions();\n  }\n\n  mainWindow = new BrowserWindow({ \n    width: 1000, \n    height: 800,\n    minWidth: 640,\n    minHeight: 480,\n    show: false \n  });\n\n  mainWindow.loadURL(url.format({\n    pathname: path.join(__dirname, 'index.html'),\n    protocol: 'file:',\n    slashes: true\n  }));\n\n  // show window once on first load\n  mainWindow.webContents.once('did-finish-load', () => {\n    mainWindow.show();\n  });\n\n  mainWindow.webContents.on('did-finish-load', () => {\n    // Handle window logic properly on macOS:\n    // 1. App should not terminate if window has been closed\n    // 2. Click on icon in dock should re-open the window\n    // 3. âŒ˜+Q should close the window and quit the app\n    if (process.platform === 'darwin') {\n      mainWindow.on('close', function (e) {\n        if (!forceQuit) {\n          e.preventDefault();\n          mainWindow.hide();\n        }\n      });\n\n      app.on('activate', () => {\n        mainWindow.show();\n      });\n      \n      app.on('before-quit', () => {\n        forceQuit = true;\n      });\n    } else {\n      mainWindow.on('closed', () => {\n        mainWindow = null;\n      });\n    }\n  });\n\n  if (isDevelopment) {\n    // auto-open dev tools\n    mainWindow.webContents.openDevTools();\n\n    // add inspect element on right click menu\n    mainWindow.webContents.on('context-menu', (e, props) => {\n      Menu.buildFromTemplate([{\n        label: 'Inspect element',\n        click() {\n          mainWindow.inspectElement(props.x, props.y);\n        }\n      }]).popup(mainWindow);\n    });\n  }\n});\n"]}